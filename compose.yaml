services:
  web-application:
    container_name: web_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres_server;Database=RentNDeliverDb;Username=postgres;Password=#123Mudar
      - ConnectionStrings__MongoDbConnection=mongodb://mongodb_server:27017
      - RabbitMQ__HostName=rabbitmq_server
      - RabbitMQ__UserName=rabbitmq
      - RabbitMQ__Password=#123Mudar
      - MongoDbSettings__DatabaseName=RentNDeliverDomainEventLogs
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
        
  postgres:
    image: postgres
    container_name: postgres_server
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "#123Mudar"
      POSTGRES_DB: RentNDeliverDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
        
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_server
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "#123Mudar"
    volumes:
     - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  mongodb:
    image: mongo
    restart: always
    container_name: mongodb_server
    ports:
      - "27017:27017"
    volumes:
     - mongodb_data:/data/db
     - mongodb_config:/data/configdb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      
volumes:
  keyring:
  postgres_data:
  rabbitmq_data:
  mongodb_data:
  mongodb_config: